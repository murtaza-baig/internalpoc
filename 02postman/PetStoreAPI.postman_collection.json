{
	"info": {
		"_postman_id": "05b96d55-1a31-4af7-bb81-13fa95a64b32",
		"name": "PetStoreAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "list pets",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "50968bbc-858a-4d2b-b98f-9a02c1676bf5",
						"exec": [
							"/**",
							" * ",
							" */ ",
							"pm.test(\"Is valid response with json array in body\", function () {",
							"    ",
							"    // assert that the status code is 200",
							"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
							"     ",
							"    // assert that the response has a valid JSON body",
							"    pm.response.to.be.withBody;",
							"     ",
							"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
							"     ",
							"    //make sure we have a valid json array",
							"    pm.expect(pm.response.json()).to.be.an('array').but.not.an('object');",
							"    ",
							"});",
							"",
							"pm.test(\"Has Content-Type header\", function () {",
							"    pm.expect(responseHeaders.hasOwnProperty(\"Content-Type\"));",
							"});",
							"",
							"pm.test(\"Is response time is less than 1700ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1700);",
							"});",
							"",
							"",
							"",
							"//https://www.chaijs.com/api/bdd/#method_a",
							"//pm.test('is valid Array', () => pm.expect(pm.response.json()).to.be.an('array').but.not.an('object'))"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "4de937b1-d4b3-4b01-8e70-23cdebb01722",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{apigw-root}}/pets"
			},
			"response": []
		},
		{
			"name": "add pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5ef360cf-514a-4a20-98f9-763d570abc33",
						"exec": [
							"/**",
							" *  ",
							" */",
							"pm.test(\"Is valid response with json object in body\", function () {",
							"    ",
							"    // assert that the status code is 200",
							"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
							"     ",
							"    // assert that the response has a valid JSON body",
							"    pm.response.to.be.withBody;",
							"     ",
							"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
							"     ",
							"    //make sure we have a valid json array",
							"    pm.expect(pm.response.json()).to.be.an('object').but.not.an('array');",
							"    ",
							"});",
							"",
							"pm.test(\"Has Content-Type header\", function () {",
							"    pm.expect(responseHeaders.hasOwnProperty(\"Content-Type\"));",
							"});",
							"",
							"pm.test(\"Is message response equal sucess\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"success\");",
							"});",
							"",
							"pm.test(\"Is response time is less than 2800ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2800);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "325ff4a7-25a9-451d-bd60-39dfecc05fd2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"type\":\"Lizzard\",\n\t\"price\": 3.50\n}"
				},
				"url": "{{apigw-root}}/pets"
			},
			"response": []
		},
		{
			"name": "get pet by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9d288b80-bced-45db-9a31-c23966abbe5b",
						"exec": [
							"/**",
							" * ",
							" */",
							"pm.test(\"Is valid response with json object in body\", function () {",
							"    ",
							"    // assert that the status code is 200",
							"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
							"     ",
							"    // assert that the response has a valid JSON body",
							"    pm.response.to.be.withBody;",
							"     ",
							"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
							"     ",
							"    //make sure we have a valid json array",
							"    pm.expect(pm.response.json()).to.be.an('object').but.not.an('array');",
							"    ",
							"});",
							"",
							"pm.test(\"Has Content-Type header\", function () {",
							"    pm.expect(responseHeaders.hasOwnProperty(\"Content-Type\"));",
							"});",
							"",
							"pm.test(\"Is response time is less than 2857ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2867);",
							"});",
							"",
							"",
							"",
							"//https://www.chaijs.com/api/bdd/#method_a",
							"//pm.test('is valid Array', () => pm.expect(pm.response.json()).to.be.an('array').but.not.an('object'))",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "13a2ae8b-4a77-41b3-a789-a163806006cd",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{apigw-root}}/pets/3"
			},
			"response": []
		}
	]
}